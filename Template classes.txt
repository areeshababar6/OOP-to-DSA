#include  <iostream>
using namespace std;

template <class t>
class matrix
{
private:
	t* arr;
	int size;
public:
	matrix(int = 5);
	void setSize(int);
	void setArr();
	void display();
	~matrix();
};
template <class t>
matrix<t>::matrix(int s)
{
	size = s;
	setArr();
}
template <class t>
void matrix<t>::setSize(int s)
{
	size = s;
	setArr();
}
template <class t>
void matrix<t>::setArr()
{
	arr = new t[size];

	for (int i = 0; i < size; i++)
	{
		cout << " Enter: ";
		cin >> arr[i];
	}
}
template <class t>
void matrix<t>::display()
{
	for (int i = 0; i < size; i++)
	{
		cout << arr[i] << " ";
	}
}
template <class t>
matrix<t>::~matrix()
{
	delete[] arr;
}
int main()
{
	matrix<int> m(3);

	m.display();

	cout << " \n\n";
	matrix<char> m1;
	m1.display();
	
	return 0;
}